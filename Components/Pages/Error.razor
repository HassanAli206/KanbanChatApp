@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<style>
    body {
        background: url('/images/teamsync-preview.jpg') no-repeat center center fixed;
        background-size: cover;
        font-family: 'Segoe UI', sans-serif;
    }

    .error-container {
        background-color: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        padding: 3rem;
        max-width: 800px;
        margin: 6rem auto;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.15);
    }

    .error-title {
        font-size: 2.5rem;
        color: #dc3545;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .error-subtitle {
        font-size: 1.5rem;
        color: #dc3545;
        margin-bottom: 1.5rem;
    }

    .request-id {
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
    }

    .dev-info {
        font-size: 1rem;
        color: #333;
        line-height: 1.6;
    }
</style>

<div class="error-container">
    <div class="error-title">Error.</div>
    <div class="error-subtitle">An error occurred while processing your request.</div>

    @if (ShowRequestId)
    {
        <p class="request-id">
            <strong>Request ID:</strong> <code>@RequestId</code>
        </p>
    }

    <h3>Development Mode</h3>
    <p class="dev-info">
        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
    </p>
    <p class="dev-info">
        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
        It can result in displaying sensitive information from exceptions to end users.
        For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
        and restarting the app.
    </p>
</div>

@code{
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}
